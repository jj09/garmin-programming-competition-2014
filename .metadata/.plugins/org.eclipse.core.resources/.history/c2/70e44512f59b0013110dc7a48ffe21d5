import java.io.*;
import java.util.*;


public class Main {
	
	public static class DataItem {
		public int x;
		public int y;
		public int shift;
		public String line;
		
		public int xNext;
		public int yNext;
	}
	
	public static int findDataItem(LinkedList<DataItem> data, int x, int y) {
		for(int i=0; i<data.size(); ++i) {
			if (data.get(i).x == x && data.get(i).y == y) {
				return i;
			}
		}
		return -1;
	}
	
	public static String shift(String input, int shift) {
		StringBuilder line = new StringBuilder(input);
		for(int i=0; i<line.length(); ++i) {
			char c = line.charAt(i);
			int indexShift = -1;
			if (c >= 'a' && c <= 'z' ) {
				indexShift = 'a';				
			}
			else if (c >= 'A' && c <= 'Z') {
				indexShift = 'A';
			}
			
			if(indexShift>0) {
				int effectiveShift = (c + shift) - indexShift;
				if (effectiveShift<0){
					effectiveShift = (c + shift + 26) - indexShift;
				}
				int newChar = (effectiveShift % 26) + indexShift;
				line.setCharAt(i, (char) (newChar));
			}
		}
		
		return line.toString();
	}
	
	public static void main(String[] args) throws IOException {
				
		LinkedList<DataItem> data = new LinkedList<DataItem>();
		
		// read file
		BufferedReader br = new BufferedReader(new FileReader("input.txt"));
		int firstX = Integer.parseInt(br.readLine());
		int firstY = Integer.parseInt(br.readLine());
		int firstShift = Integer.parseInt(br.readLine());
		
		String temp;
		while((temp = br.readLine()) != null) {
			DataItem di = new DataItem();
			String[] array = temp.split(",");
			int x = Integer.parseInt(array[0]);
			int y = Integer.parseInt(array[1]);
			
			int ind = findDataItem(data, di.xNext, di.yNext);
			if(ind == -1) {
				data.get(ind).shift = shiftNext;
			}
			
			di.line = array[2];
			di.xNext = Integer.parseInt(array[3]);
			di.yNext = Integer.parseInt(array[4]);
			
			data.add(di);
			
			int shiftNext = Integer.parseInt(array[5]) % 26;
			
			ind = findDataItem(data, di.xNext, di.yNext);
			if(ind>=0) {
//				data.get(ind).x = di.xNext;
//				data.get(ind).y = di.yNext;
				data.get(ind).shift = shiftNext;
			} else {
				DataItem nextDataItem = new DataItem();
				nextDataItem.x = di.xNext;
				nextDataItem.y = di.yNext;
				nextDataItem.shift = shiftNext;
				data.add(nextDataItem);
			}
		}
		
		br.close();
		
		// traverse
		StringBuilder result = new StringBuilder();
		DataItem current = data.get(findDataItem(data, firstX, firstY));
		current.shift = firstShift;
		
		int lastShift = -1;
		while(lastShift!=0) {
			result.append(shift(current.line, current.shift));
			lastShift = current.shift;
			int nextInd = findDataItem(data, current.xNext, current.yNext);
			current = data.get(nextInd);
		}
		
		
		System.out.println(result);
	}
}
